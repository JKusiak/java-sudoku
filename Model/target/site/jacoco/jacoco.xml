<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Model_Project"><sessioninfo id="JK-75b4f044" start="1607110028957" dump="1607110030572"/><sessioninfo id="JK-641d994c" start="1607176641433" dump="1607176643142"/><sessioninfo id="JK-7ec3c379" start="1607176806766" dump="1607176808985"/><sessioninfo id="JK-dd91593d" start="1607176870141" dump="1607176872298"/><sessioninfo id="JK-15398386" start="1607177098637" dump="1607177101812"/><sessioninfo id="JK-85942807" start="1607177677007" dump="1607177679906"/><sessioninfo id="JK-30272a28" start="1607178009682" dump="1607178011935"/><sessioninfo id="JK-6ebb1f88" start="1607289272093" dump="1607289274305"/><sessioninfo id="JK-5d9e5f55" start="1607289658724" dump="1607289660709"/><sessioninfo id="JK-442543d6" start="1607338571572" dump="1607338573992"/><sessioninfo id="JK-78c75bf7" start="1607338659312" dump="1607338661350"/><sessioninfo id="JK-e66b0b00" start="1607339146453" dump="1607339148709"/><sessioninfo id="JK-5a19ab8e" start="1607339390584" dump="1607339392668"/><sessioninfo id="JK-19038005" start="1607339481289" dump="1607339483488"/><package name="dao"><class name="dao/FileSudokuBoardDao" sourcefilename="FileSudokuBoardDao.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()Lsudoku/SudokuBoard;" line="31"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lsudoku/SudokuBoard;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="54"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="finalize" desc="()V" line="65"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="55"/><counter type="LINE" missed="4" covered="16"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="dao/Dao" sourcefilename="Dao.java"/><class name="dao/FileSudokuBoardDao$MyIoException" sourcefilename="FileSudokuBoardDao.java"><method name="&lt;init&gt;" desc="(Ldao/FileSudokuBoardDao;Ljava/lang/String;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="dao/SudokuBoardDaoFactory" sourcefilename="SudokuBoardDaoFactory.java"><method name="getFileDao" desc="(Ljava/lang/String;)Ldao/Dao;" line="11"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FileSudokuBoardDao.java"><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="9" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="9" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="62"/><counter type="LINE" missed="4" covered="19"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SudokuBoardDaoFactory.java"><line nr="11" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Dao.java"/><counter type="INSTRUCTION" missed="7" covered="67"/><counter type="LINE" missed="4" covered="20"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="3"/></package><package name="sudoku"><class name="sudoku/SudokuBoard" sourcefilename="SudokuBoard.java"><method name="&lt;init&gt;" desc="(Lsolver/SudokuSolver;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="solveGame" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(II)I" line="37"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(III)V" line="41"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRow" desc="(I)Lsudoku/SudokuStructure;" line="51"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getColumn" desc="(I)Lsudoku/SudokuStructure;" line="63"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBox" desc="(II)Lsudoku/SudokuStructure;" line="74"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkBoard" desc="()Z" line="92"><counter type="INSTRUCTION" missed="4" covered="39"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="113"><counter type="INSTRUCTION" missed="4" covered="48"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="140"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="145"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clone" desc="()Lsudoku/SudokuBoard;" line="157"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="308"/><counter type="BRANCH" missed="5" covered="35"/><counter type="LINE" missed="6" covered="54"/><counter type="COMPLEXITY" missed="6" covered="27"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sudoku/SudokuField" sourcefilename="SudokuField.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="15"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFieldValue" desc="()I" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFieldValue" desc="(I)V" line="24"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="29"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="41"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lsudoku/SudokuField;" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Lsudoku/SudokuField;)I" line="65"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="63"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sudoku/SudokuStructure" sourcefilename="SudokuStructure.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="verify" desc="()Z" line="36"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="53"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="65"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clone" desc="()Lsudoku/SudokuStructure;" line="81"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="110"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="2" covered="24"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SudokuField.java"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="2"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="1" cb="1"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="9" mb="0" cb="2"/><line nr="41" mi="0" ci="10" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="63"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SudokuStructure.java"><line nr="14" mi="0" ci="10" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="6" mb="0" cb="2"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="9" mb="0" cb="2"/><line nr="30" mi="0" ci="8" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="2"/><line nr="40" mi="0" ci="10" mb="1" cb="1"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="1" cb="1"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="110"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="2" covered="24"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SudokuBoard.java"><line nr="12" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="9" mb="0" cb="2"/><line nr="25" mi="0" ci="11" mb="0" cb="2"/><line nr="26" mi="0" ci="9" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="2"/><line nr="54" mi="0" ci="11" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="2"/><line nr="65" mi="0" ci="11" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="76" mi="0" ci="9" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="9" mb="0" cb="2"/><line nr="81" mi="0" ci="9" mb="0" cb="2"/><line nr="82" mi="0" ci="11" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="2"/><line nr="93" mi="0" ci="10" mb="2" cb="2"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="2"/><line nr="101" mi="0" ci="7" mb="0" cb="2"/><line nr="102" mi="0" ci="6" mb="1" cb="1"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="1" cb="1"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="2"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="1" cb="1"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="9" mb="0" cb="2"/><line nr="128" mi="0" ci="11" mb="0" cb="2"/><line nr="129" mi="0" ci="9" mb="0" cb="2"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="9" mb="0" cb="2"/><line nr="159" mi="0" ci="11" mb="0" cb="2"/><line nr="160" mi="0" ci="8" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="308"/><counter type="BRANCH" missed="5" covered="35"/><counter type="LINE" missed="6" covered="54"/><counter type="COMPLEXITY" missed="6" covered="27"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="19" covered="481"/><counter type="BRANCH" missed="8" covered="50"/><counter type="LINE" missed="9" covered="96"/><counter type="COMPLEXITY" missed="9" covered="49"/><counter type="METHOD" missed="1" covered="28"/><counter type="CLASS" missed="0" covered="3"/></package><package name="solver"><class name="solver/SudokuSolver" sourcefilename="SudokuSolver.java"/><class name="solver/BacktrackingSudokuSolver" sourcefilename="BacktrackingSudokuSolver.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="solve" desc="(Lsudoku/SudokuBoard;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fillWithZeroes" desc="(Lsudoku/SudokuBoard;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fillInitialRandom" desc="(Lsudoku/SudokuBoard;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRowOk" desc="(Lsudoku/SudokuBoard;II)Z" line="55"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isColOk" desc="(Lsudoku/SudokuBoard;II)Z" line="65"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSquareOk" desc="(Lsudoku/SudokuBoard;III)Z" line="75"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOk" desc="(Lsudoku/SudokuBoard;III)Z" line="90"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="solveAlgorithm" desc="(Lsudoku/SudokuBoard;)Z" line="97"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCopy" desc="()Lsolver/SudokuSolver;" line="120"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="222"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="29"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="solver/BacktrackingSudokuSolver$1" sourcefilename="BacktrackingSudokuSolver.java"><method name="&lt;init&gt;" desc="(Lsolver/BacktrackingSudokuSolver;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="BacktrackingSudokuSolver.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="7" mb="0" cb="2"/><line nr="22" mi="0" ci="7" mb="0" cb="2"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="10" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="2"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="9" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="2"/><line nr="56" mi="0" ci="6" mb="0" cb="2"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="2"/><line nr="66" mi="0" ci="6" mb="0" cb="2"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="9" mb="0" cb="2"/><line nr="79" mi="0" ci="9" mb="0" cb="2"/><line nr="80" mi="0" ci="6" mb="0" cb="2"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="11" mb="0" cb="2"/><line nr="91" mi="0" ci="7" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="2"/><line nr="97" mi="0" ci="7" mb="0" cb="2"/><line nr="98" mi="0" ci="7" mb="0" cb="2"/><line nr="99" mi="0" ci="5" mb="0" cb="2"/><line nr="101" mi="0" ci="7" mb="0" cb="2"/><line nr="102" mi="0" ci="7" mb="0" cb="2"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="2"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="273"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="0" covered="56"/><counter type="COMPLEXITY" missed="0" covered="30"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SudokuSolver.java"/><counter type="INSTRUCTION" missed="0" covered="273"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="0" covered="56"/><counter type="COMPLEXITY" missed="0" covered="30"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="2"/></package><counter type="INSTRUCTION" missed="26" covered="821"/><counter type="BRANCH" missed="8" covered="88"/><counter type="LINE" missed="13" covered="172"/><counter type="COMPLEXITY" missed="11" covered="84"/><counter type="METHOD" missed="3" covered="44"/><counter type="CLASS" missed="0" covered="8"/></report>